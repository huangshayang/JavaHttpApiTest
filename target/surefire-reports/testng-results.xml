<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="15" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Converted JUnit suite" duration-ms="3827" started-at="2017-07-26T10:14:00Z" finished-at="2017-07-26T10:14:03Z">
    <groups>
    </groups>
    <test name="JUnitTests" duration-ms="3827" started-at="2017-07-26T10:14:00Z" finished-at="2017-07-26T10:14:03Z">
      <class name="Java.LoginCaseTest">
        <test-method status="PASS" signature="testLogin()" name="testLogin[8]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[8] -->
        <test-method status="FAIL" signature="testLogin()" name="testLogin[0]" duration-ms="15" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<0> but was:<204>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<0> but was:<204>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:645)
	at org.junit.Assert.assertEquals(Assert.java:631)
	at Java.LoginCaseTest.testLogin(LoginCaseTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:82)
	at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:70)
	at org.testng.TestRunner$1.run(TestRunner.java:667)
	at org.testng.TestRunner.runJUnitWorkers(TestRunner.java:950)
	at org.testng.TestRunner.privateRunJUnit(TestRunner.java:698)
	at org.testng.TestRunner.run(TestRunner.java:599)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[0] -->
        <test-method status="PASS" signature="testLogin()" name="testLogin[6]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[6] -->
        <test-method status="PASS" signature="testLogin()" name="testLogin[3]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[3] -->
        <test-method status="PASS" signature="testLogin()" name="testLogin[5]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[5] -->
        <test-method status="PASS" signature="testLogin()" name="testLogin[2]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[2] -->
        <test-method status="PASS" signature="testLogin()" name="testLogin[7]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[7] -->
        <test-method status="PASS" signature="testLogin()" name="testLogin[4]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[4] -->
        <test-method status="PASS" signature="testLogin()" name="testLogin[1]" duration-ms="31" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin[1] -->
      </class> <!-- Java.LoginCaseTest -->
      <class name="Java.CheckUserExistCaseTest">
        <test-method status="PASS" signature="testCheckUserExist()" name="testCheckUserExist[4]" duration-ms="15" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUserExist[4] -->
        <test-method status="PASS" signature="testCheckUserExist()" name="testCheckUserExist[1]" duration-ms="15" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUserExist[1] -->
        <test-method status="PASS" signature="testCheckUserExist()" name="testCheckUserExist[5]" duration-ms="15" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUserExist[5] -->
        <test-method status="PASS" signature="testCheckUserExist()" name="testCheckUserExist[0]" duration-ms="15" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUserExist[0] -->
        <test-method status="PASS" signature="testCheckUserExist()" name="testCheckUserExist[3]" duration-ms="15" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUserExist[3] -->
        <test-method status="PASS" signature="testCheckUserExist()" name="testCheckUserExist[2]" duration-ms="15" started-at="2017-07-26T18:14:03Z" finished-at="2017-07-26T18:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUserExist[2] -->
      </class> <!-- Java.CheckUserExistCaseTest -->
    </test> <!-- JUnitTests -->
  </suite> <!-- Converted JUnit suite -->
</testng-results>
